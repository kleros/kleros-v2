{
  "address": "0xD78DCddE2C5a2Bd4BB246Bc7dB6994b95f7c442C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengeDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedAt",
          "type": "uint256"
        }
      ],
      "name": "ClaimReceived",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "challenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengeDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "address",
          "name": "bridger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimDeposit",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "relayed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengeDuration",
          "type": "uint256"
        }
      ],
      "name": "setChallengePeriodDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimDeposit",
          "type": "uint256"
        }
      ],
      "name": "setClaimDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_encodedData",
          "type": "bytes"
        }
      ],
      "name": "verifyAndRelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "withdrawClaimDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x15b12d9a11d91679f1ec9360ba1e410a110114f34334ac362efcd36d5eb812ea",
  "receipt": {
    "to": null,
    "from": "0xF50E77f2A2B6138D16c6c7511562E5C33c4B15A3",
    "contractAddress": "0xD78DCddE2C5a2Bd4BB246Bc7dB6994b95f7c442C",
    "transactionIndex": 5,
    "gasUsed": "667272",
    "logsBloom": "0x
    "blockHash": "0x070121f019f299b0e1b45539454cf8e31fc1fb4b0add90d2f9836a3f5562efb1",
    "transactionHash": "0x15b12d9a11d91679f1ec9360ba1e410a110114f34334ac362efcd36d5eb812ea",
    "logs": [],
    "blockNumber": 10190111,
    "cumulativeGasUsed": "1083833",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF50E77f2A2B6138D16c6c7511562E5C33c4B15A3",
    "100000000000000000",
    3600
  ],
  "numDeployments": 1,
  "solcInputHash": "0a1ec2a631b00a23a4a92b2eaceb36a5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_challengeDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"challengeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bridger\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimDeposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"relayed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeDuration\",\"type\":\"uint256\"}],\"name\":\"setChallengePeriodDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimDeposit\",\"type\":\"uint256\"}],\"name\":\"setClaimDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_encodedData\",\"type\":\"bytes\"}],\"name\":\"verifyAndRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"withdrawClaimDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bridge/FastBridgeReceiver.sol\":\"FastBridgeReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/bridge/FastBridgeReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n *  @authors: [@shalzz]\\n *  @reviewers: []\\n *  @auditors: []\\n *  @bounties: []\\n *  @deployments: []\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IFastBridgeReceiver.sol\\\";\\n\\ncontract FastBridgeReceiver is IFastBridgeReceiver {\\n    address public governor;\\n    uint256 public claimDeposit;\\n    uint256 public challengeDuration;\\n\\n    struct Claim {\\n        address bridger;\\n        uint256 claimedAt;\\n        uint256 claimDeposit;\\n        bool relayed;\\n    }\\n\\n    // messageHash => Claim\\n    mapping(bytes32 => Claim) public claims;\\n\\n    event ClaimReceived(bytes32 messageHash, uint256 claimedAt);\\n\\n    modifier onlyByGovernor() {\\n        require(governor == msg.sender, \\\"Access not allowed: Governor only.\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _governor,\\n        uint256 _claimDeposit,\\n        uint256 _challengeDuration\\n    ) {\\n        governor = _governor;\\n        claimDeposit = _claimDeposit;\\n        challengeDuration = _challengeDuration;\\n    }\\n\\n    function claim(bytes32 _messageHash) external payable {\\n        require(msg.value >= claimDeposit, \\\"Not enough claim deposit\\\");\\n        require(claims[_messageHash].bridger == address(0), \\\"Claimed already made\\\");\\n\\n        claims[_messageHash] = Claim({\\n            bridger: msg.sender,\\n            claimedAt: block.timestamp,\\n            claimDeposit: msg.value,\\n            relayed: false\\n        });\\n\\n        emit ClaimReceived(_messageHash, block.timestamp);\\n    }\\n\\n    function verifyAndRelay(bytes32 _messageHash, bytes memory _encodedData) external {\\n        require(keccak256(_encodedData) == _messageHash, \\\"Invalid hash\\\");\\n\\n        Claim storage claim = claims[_messageHash];\\n        require(claim.bridger != address(0), \\\"Claim does not exist\\\");\\n        require(claim.claimedAt + challengeDuration < block.timestamp, \\\"Challenge period not over\\\");\\n        require(claim.relayed == false, \\\"Message already relayed\\\");\\n\\n        // Decode the receiver address from the data encoded by the IFastBridgeSender\\n        (address receiver, bytes memory data) = abi.decode(_encodedData, (address, bytes));\\n        (bool success, ) = address(receiver).call(data);\\n        require(success, \\\"Failed to call contract\\\");\\n\\n        claim.relayed = true;\\n    }\\n\\n    function withdrawClaimDeposit(bytes32 _messageHash) external {\\n        Claim storage claim = claims[_messageHash];\\n        require(claim.bridger != address(0), \\\"Claim does not exist\\\");\\n        require(claim.claimedAt + challengeDuration < block.timestamp, \\\"Challenge period not over\\\");\\n\\n        uint256 amount = claim.claimDeposit;\\n        claim.claimDeposit = 0;\\n        payable(claim.bridger).send(amount);\\n    }\\n\\n    function challenge() external {\\n        revert(\\\"Not Implemented\\\");\\n    }\\n\\n    //**** Governor functions ****//\\n\\n    function setClaimDeposit(uint256 _claimDeposit) external onlyByGovernor {\\n        claimDeposit = _claimDeposit;\\n    }\\n\\n    function setChallengePeriodDuration(uint256 _challengeDuration) external onlyByGovernor {\\n        challengeDuration = _challengeDuration;\\n    }\\n}\\n\",\"keccak256\":\"0xf84287907e7101b142dddf2fd1b0357eb9d289a8dd7affbe9b7163238088cfc7\",\"license\":\"MIT\"},\"src/bridge/interfaces/IFastBridgeReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFastBridgeReceiver {\\n    function claim(bytes32 _messageHash) external payable;\\n\\n    function verifyAndRelay(bytes32 _messageHash, bytes memory _calldata) external;\\n\\n    function withdrawClaimDeposit(bytes32 _messageHash) external;\\n\\n    function claimDeposit() external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0x1d7f6a6ed2c2b88f51833cba6091c57a43af2915a265395ad11aad08b1f7285d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a88380380610a8883398101604081905261002f9161005b565b600080546001600160a01b0319166001600160a01b03949094169390931790925560015560025561009e565b60008060006060848603121561007057600080fd5b83516001600160a01b038116811461008757600080fd5b602085015160409095015190969495509392505050565b6109db806100ad6000396000f3fe6080604052600436106100915760003560e01c8063bc43b86511610059578063bc43b8651461014f578063bd66528a1461016f578063d2ef739814610182578063ee32cceb14610197578063eff0f592146101b757600080fd5b80630c340a241461009657806323d631ac146100d3578063292f2e0e146100f557806329d07a51146101195780634458e6091461012f575b600080fd5b3480156100a257600080fd5b506000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100f36100ee366004610746565b610234565b005b34801561010157600080fd5b5061010b60025481565b6040519081526020016100ca565b34801561012557600080fd5b5061010b60015481565b34801561013b57600080fd5b506100f361014a366004610746565b61032b565b34801561015b57600080fd5b506100f361016a366004610746565b61035a565b6100f361017d366004610746565b610389565b34801561018e57600080fd5b506100f36104de565b3480156101a357600080fd5b506100f36101b23660046107ce565b610518565b3480156101c357600080fd5b506102086101d2366004610746565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b0390911692919060ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016100ca565b600081815260036020526040902080546001600160a01b03166102955760405162461bcd60e51b815260206004820152601460248201527310db185a5b48191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b4260025482600101546102a89190610858565b106102f15760405162461bcd60e51b815260206004820152601960248201527821b430b63632b733b2903832b934b7b2103737ba1037bb32b960391b604482015260640161028c565b600281018054600091829055825460405191926001600160a01b039091169183156108fc0291849190818181858888f15050505050505050565b6000546001600160a01b031633146103555760405162461bcd60e51b815260040161028c9061087e565b600255565b6000546001600160a01b031633146103845760405162461bcd60e51b815260040161028c9061087e565b600155565b6001543410156103db5760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f75676820636c61696d206465706f7369740000000000000000604482015260640161028c565b6000818152600360205260409020546001600160a01b0316156104375760405162461bcd60e51b8152602060048201526014602482015273436c61696d656420616c7265616479206d61646560601b604482015260640161028c565b6040805160808101825233815242602080830182815234848601908152600060608601818152888252600380865291889020965187546001600160a01b0319166001600160a01b03909116178755925160018701559051600286015590519301805460ff1916931515939093179092558251848152918201527f32899d160dbf80374e3a2eacfc04011027c1542248d33c4cd7b80d61176c0463910160405180910390a150565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd08125b5c1b195b595b9d1959608a1b604482015260640161028c565b80516020820120821461055c5760405162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015260640161028c565b600082815260036020526040902080546001600160a01b03166105b85760405162461bcd60e51b815260206004820152601460248201527310db185a5b48191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161028c565b4260025482600101546105cb9190610858565b106106145760405162461bcd60e51b815260206004820152601960248201527821b430b63632b733b2903832b934b7b2103737ba1037bb32b960391b604482015260640161028c565b600381015460ff16156106695760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c61796564000000000000000000604482015260640161028c565b6000808380602001905181019061068091906108f0565b915091506000826001600160a01b03168260405161069e9190610989565b6000604051808303816000865af19150503d80600081146106db576040519150601f19603f3d011682016040523d82523d6000602084013e6106e0565b606091505b50509050806107315760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e7472616374000000000000000000604482015260640161028c565b505050600301805460ff191660011790555050565b60006020828403121561075857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561079e5761079e61075f565b604052919050565b600067ffffffffffffffff8211156107c0576107c061075f565b50601f01601f191660200190565b600080604083850312156107e157600080fd5b82359150602083013567ffffffffffffffff8111156107ff57600080fd5b8301601f8101851361081057600080fd5b803561082361081e826107a6565b610775565b81815286602083850101111561083857600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000821982111561087957634e487b7160e01b600052601160045260246000fd5b500190565b60208082526022908201527f416363657373206e6f7420616c6c6f7765643a20476f7665726e6f72206f6e6c6040820152613c9760f11b606082015260800190565b60005b838110156108db5781810151838201526020016108c3565b838111156108ea576000848401525b50505050565b6000806040838503121561090357600080fd5b82516001600160a01b038116811461091a57600080fd5b602084015190925067ffffffffffffffff81111561093757600080fd5b8301601f8101851361094857600080fd5b805161095661081e826107a6565b81815286602083850101111561096b57600080fd5b61097c8260208301602086016108c0565b8093505050509250929050565b6000825161099b8184602087016108c0565b919091019291505056fea2646970667358221220b68116d29aea33bc3a2cc26b85b6677740b9b028cfa86a109ebbcb6b98615f7c64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063bc43b86511610059578063bc43b8651461014f578063bd66528a1461016f578063d2ef739814610182578063ee32cceb14610197578063eff0f592146101b757600080fd5b80630c340a241461009657806323d631ac146100d3578063292f2e0e146100f557806329d07a51146101195780634458e6091461012f575b600080fd5b3480156100a257600080fd5b506000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100f36100ee366004610746565b610234565b005b34801561010157600080fd5b5061010b60025481565b6040519081526020016100ca565b34801561012557600080fd5b5061010b60015481565b34801561013b57600080fd5b506100f361014a366004610746565b61032b565b34801561015b57600080fd5b506100f361016a366004610746565b61035a565b6100f361017d366004610746565b610389565b34801561018e57600080fd5b506100f36104de565b3480156101a357600080fd5b506100f36101b23660046107ce565b610518565b3480156101c357600080fd5b506102086101d2366004610746565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b0390911692919060ff1684565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016100ca565b600081815260036020526040902080546001600160a01b03166102955760405162461bcd60e51b815260206004820152601460248201527310db185a5b48191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b4260025482600101546102a89190610858565b106102f15760405162461bcd60e51b815260206004820152601960248201527821b430b63632b733b2903832b934b7b2103737ba1037bb32b960391b604482015260640161028c565b600281018054600091829055825460405191926001600160a01b039091169183156108fc0291849190818181858888f15050505050505050565b6000546001600160a01b031633146103555760405162461bcd60e51b815260040161028c9061087e565b600255565b6000546001600160a01b031633146103845760405162461bcd60e51b815260040161028c9061087e565b600155565b6001543410156103db5760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f75676820636c61696d206465706f7369740000000000000000604482015260640161028c565b6000818152600360205260409020546001600160a01b0316156104375760405162461bcd60e51b8152602060048201526014602482015273436c61696d656420616c7265616479206d61646560601b604482015260640161028c565b6040805160808101825233815242602080830182815234848601908152600060608601818152888252600380865291889020965187546001600160a01b0319166001600160a01b03909116178755925160018701559051600286015590519301805460ff1916931515939093179092558251848152918201527f32899d160dbf80374e3a2eacfc04011027c1542248d33c4cd7b80d61176c0463910160405180910390a150565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd08125b5c1b195b595b9d1959608a1b604482015260640161028c565b80516020820120821461055c5760405162461bcd60e51b815260206004820152600c60248201526b092dcecc2d8d2c840d0c2e6d60a31b604482015260640161028c565b600082815260036020526040902080546001600160a01b03166105b85760405162461bcd60e51b815260206004820152601460248201527310db185a5b48191bd95cc81b9bdd08195e1a5cdd60621b604482015260640161028c565b4260025482600101546105cb9190610858565b106106145760405162461bcd60e51b815260206004820152601960248201527821b430b63632b733b2903832b934b7b2103737ba1037bb32b960391b604482015260640161028c565b600381015460ff16156106695760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c61796564000000000000000000604482015260640161028c565b6000808380602001905181019061068091906108f0565b915091506000826001600160a01b03168260405161069e9190610989565b6000604051808303816000865af19150503d80600081146106db576040519150601f19603f3d011682016040523d82523d6000602084013e6106e0565b606091505b50509050806107315760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e7472616374000000000000000000604482015260640161028c565b505050600301805460ff191660011790555050565b60006020828403121561075857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561079e5761079e61075f565b604052919050565b600067ffffffffffffffff8211156107c0576107c061075f565b50601f01601f191660200190565b600080604083850312156107e157600080fd5b82359150602083013567ffffffffffffffff8111156107ff57600080fd5b8301601f8101851361081057600080fd5b803561082361081e826107a6565b610775565b81815286602083850101111561083857600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000821982111561087957634e487b7160e01b600052601160045260246000fd5b500190565b60208082526022908201527f416363657373206e6f7420616c6c6f7765643a20476f7665726e6f72206f6e6c6040820152613c9760f11b606082015260800190565b60005b838110156108db5781810151838201526020016108c3565b838111156108ea576000848401525b50505050565b6000806040838503121561090357600080fd5b82516001600160a01b038116811461091a57600080fd5b602084015190925067ffffffffffffffff81111561093757600080fd5b8301601f8101851361094857600080fd5b805161095661081e826107a6565b81815286602083850101111561096b57600080fd5b61097c8260208301602086016108c0565b8093505050509250929050565b6000825161099b8184602087016108c0565b919091019291505056fea2646970667358221220b68116d29aea33bc3a2cc26b85b6677740b9b028cfa86a109ebbcb6b98615f7c64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7957,
        "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7959,
        "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
        "label": "claimDeposit",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7961,
        "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
        "label": "challengeDuration",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7975,
        "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
        "label": "claims",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(Claim)7970_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(Claim)7970_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct FastBridgeReceiver.Claim)",
        "numberOfBytes": "32",
        "value": "t_struct(Claim)7970_storage"
      },
      "t_struct(Claim)7970_storage": {
        "encoding": "inplace",
        "label": "struct FastBridgeReceiver.Claim",
        "members": [
          {
            "astId": 7963,
            "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
            "label": "bridger",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7965,
            "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
            "label": "claimedAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7967,
            "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
            "label": "claimDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7969,
            "contract": "src/bridge/FastBridgeReceiver.sol:FastBridgeReceiver",
            "label": "relayed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
