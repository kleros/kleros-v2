{
  "address": "0xaE25ed5eDad0bD932D3Af2e36631849497512068",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_courtID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_policy",
          "type": "string"
        }
      ],
      "name": "PolicyUpdate",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_courtID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_policy",
          "type": "string"
        }
      ],
      "name": "setPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b9a38c9a30e1deeff1ce072e1827d8f1ec06a737bfa0b512d525d14929a0c03",
  "receipt": {
    "to": null,
    "from": "0x7DF31A792a14852614667fcC9cb6bb2F2BA79839",
    "contractAddress": "0xaE25ed5eDad0bD932D3Af2e36631849497512068",
    "transactionIndex": 1,
    "gasUsed": "369981",
    "logsBloom": "0x
    "blockHash": "0xfee6fefa99f4df9980604f487b7ed06e9a64f4da3a6b7dbeafac0f8b41d85fbb",
    "transactionHash": "0x7b9a38c9a30e1deeff1ce072e1827d8f1ec06a737bfa0b512d525d14929a0c03",
    "logs": [],
    "blockNumber": 3279052,
    "cumulativeGasUsed": "369981",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7DF31A792a14852614667fcC9cb6bb2F2BA79839"
  ],
  "numDeployments": 3,
  "solcInputHash": "f1efc7bfbda9ec0f7e44ef9341650de2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_courtID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_policy\",\"type\":\"string\"}],\"name\":\"PolicyUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_courtID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_policy\",\"type\":\"string\"}],\"name\":\"setPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enrique Piqueras - <epiquerass@gmail.com>\",\"details\":\"A contract to maintain a policy for each court.\",\"events\":{\"PolicyUpdate(uint256,string)\":{\"details\":\"Emitted when a policy is updated.\",\"params\":{\"_courtID\":\"The ID of the policy's court.\",\"_policy\":\"The URI of the policy JSON.\"}}},\"kind\":\"dev\",\"methods\":{\"changeGovernor(address)\":{\"details\":\"Changes the `governor` storage variable.\",\"params\":{\"_governor\":\"The new value for the `governor` storage variable.\"}},\"constructor\":{\"details\":\"Constructs the `PolicyRegistry` contract.\",\"params\":{\"_governor\":\"The governor's address.\"}},\"setPolicy(uint256,string)\":{\"details\":\"Sets the policy for the specified court.\",\"params\":{\"_courtID\":\"The ID of the specified court.\",\"_policy\":\"The URI of the policy JSON.\"}}},\"title\":\"PolicyRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/arbitration/PolicyRegistry.sol\":\"PolicyRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"src/arbitration/PolicyRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\n/**\\n *  @title PolicyRegistry\\n *  @author Enrique Piqueras - <epiquerass@gmail.com>\\n *  @dev A contract to maintain a policy for each court.\\n */\\ncontract PolicyRegistry {\\n    // ************************************* //\\n    // *              Events               * //\\n    // ************************************* //\\n\\n    /**\\n     *  @dev Emitted when a policy is updated.\\n     *  @param _courtID The ID of the policy's court.\\n     *  @param _policy The URI of the policy JSON.\\n     */\\n    event PolicyUpdate(uint256 indexed _courtID, string _policy);\\n\\n    // ************************************* //\\n    // *             Storage               * //\\n    // ************************************* //\\n\\n    address public governor;\\n    mapping(uint256 => string) public policies;\\n\\n    // ************************************* //\\n    // *        Function Modifiers         * //\\n    // ************************************* //\\n\\n    /**\\n     *  @dev Requires that the sender is the governor.\\n     */\\n    modifier onlyByGovernor() {\\n        require(governor == msg.sender, \\\"No allowed: governor only\\\");\\n        _;\\n    }\\n\\n    // ************************************* //\\n    // *            Constructor            * //\\n    // ************************************* //\\n\\n    /** @dev Constructs the `PolicyRegistry` contract.\\n     *  @param _governor The governor's address.\\n     */\\n    constructor(address _governor) {\\n        governor = _governor;\\n    }\\n\\n    // ************************************* //\\n    // *            Governance             * //\\n    // ************************************* //\\n\\n    /**\\n     *  @dev Changes the `governor` storage variable.\\n     *  @param _governor The new value for the `governor` storage variable.\\n     */\\n    function changeGovernor(address _governor) external onlyByGovernor {\\n        governor = _governor;\\n    }\\n\\n    // ************************************* //\\n    // *         State Modifiers           * //\\n    // ************************************* //\\n\\n    /**\\n     *  @dev Sets the policy for the specified court.\\n     *  @param _courtID The ID of the specified court.\\n     *  @param _policy The URI of the policy JSON.\\n     */\\n    function setPolicy(uint256 _courtID, string calldata _policy) external onlyByGovernor {\\n        policies[_courtID] = _policy;\\n        emit PolicyUpdate(_courtID, policies[_courtID]);\\n    }\\n}\\n\",\"keccak256\":\"0x29473eaba7fff441ccc0fc53bc978cad01792c7c5abafd98ddf7c0b158edd8ca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105dd3803806105dd83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61054a806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a2414610051578063d3e8948314610081578063e4c0aaf4146100a1578063f00adf5e146100b6575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046102e4565b6100c9565b60405161007891906102fd565b6100b46100af366004610352565b610163565b005b6100b46100c4366004610382565b6101b8565b600160205260009081526040902080546100e2906103fe565b80601f016020809104026020016040519081016040528092919081815260200182805461010e906103fe565b801561015b5780601f106101305761010080835404028352916020019161015b565b820191906000526020600020905b81548152906001019060200180831161013e57829003601f168201915b505050505081565b6000546001600160a01b031633146101965760405162461bcd60e51b815260040161018d90610439565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101e25760405162461bcd60e51b815260040161018d90610439565b60008381526001602052604090206101fb90838361024b565b50827f6363e8b93c0bbb112f6247819a99f3c99f4a3e0f8e119a64e5ceb6edb9b3cc7b6001600086815260200190815260200160002060405161023e919061046c565b60405180910390a2505050565b828054610257906103fe565b90600052602060002090601f01602090048101928261027957600085556102bf565b82601f106102925782800160ff198235161785556102bf565b828001600101855582156102bf579182015b828111156102bf5782358255916020019190600101906102a4565b506102cb9291506102cf565b5090565b5b808211156102cb57600081556001016102d0565b6000602082840312156102f657600080fd5b5035919050565b600060208083528351808285015260005b8181101561032a5785810183015185820160400152820161030e565b8181111561033c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561036457600080fd5b81356001600160a01b038116811461037b57600080fd5b9392505050565b60008060006040848603121561039757600080fd5b83359250602084013567ffffffffffffffff808211156103b657600080fd5b818601915086601f8301126103ca57600080fd5b8135818111156103d957600080fd5b8760208285010111156103eb57600080fd5b6020830194508093505050509250925092565b600181811c9082168061041257607f821691505b6020821081141561043357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601990820152784e6f20616c6c6f7765643a20676f7665726e6f72206f6e6c7960381b604082015260600190565b600060208083526000845481600182811c91508083168061048e57607f831692505b8583108114156104ac57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156104c957600181146104da57610505565b60ff19861682528782019650610505565b60008b81526020902060005b868110156104ff578154848201529085019089016104e6565b83019750505b5094999850505050505050505056fea2646970667358221220fc9b16dcd84485a53163c63a2dbbc67947f69b20b0347cacaaaf3905f309d6c964736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a2414610051578063d3e8948314610081578063e4c0aaf4146100a1578063f00adf5e146100b6575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046102e4565b6100c9565b60405161007891906102fd565b6100b46100af366004610352565b610163565b005b6100b46100c4366004610382565b6101b8565b600160205260009081526040902080546100e2906103fe565b80601f016020809104026020016040519081016040528092919081815260200182805461010e906103fe565b801561015b5780601f106101305761010080835404028352916020019161015b565b820191906000526020600020905b81548152906001019060200180831161013e57829003601f168201915b505050505081565b6000546001600160a01b031633146101965760405162461bcd60e51b815260040161018d90610439565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101e25760405162461bcd60e51b815260040161018d90610439565b60008381526001602052604090206101fb90838361024b565b50827f6363e8b93c0bbb112f6247819a99f3c99f4a3e0f8e119a64e5ceb6edb9b3cc7b6001600086815260200190815260200160002060405161023e919061046c565b60405180910390a2505050565b828054610257906103fe565b90600052602060002090601f01602090048101928261027957600085556102bf565b82601f106102925782800160ff198235161785556102bf565b828001600101855582156102bf579182015b828111156102bf5782358255916020019190600101906102a4565b506102cb9291506102cf565b5090565b5b808211156102cb57600081556001016102d0565b6000602082840312156102f657600080fd5b5035919050565b600060208083528351808285015260005b8181101561032a5785810183015185820160400152820161030e565b8181111561033c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561036457600080fd5b81356001600160a01b038116811461037b57600080fd5b9392505050565b60008060006040848603121561039757600080fd5b83359250602084013567ffffffffffffffff808211156103b657600080fd5b818601915086601f8301126103ca57600080fd5b8135818111156103d957600080fd5b8760208285010111156103eb57600080fd5b6020830194508093505050509250925092565b600181811c9082168061041257607f821691505b6020821081141561043357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601990820152784e6f20616c6c6f7765643a20676f7665726e6f72206f6e6c7960381b604082015260600190565b600060208083526000845481600182811c91508083168061048e57607f831692505b8583108114156104ac57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156104c957600181146104da57610505565b60ff19861682528782019650610505565b60008b81526020902060005b868110156104ff578154848201529085019089016104e6565b83019750505b5094999850505050505050505056fea2646970667358221220fc9b16dcd84485a53163c63a2dbbc67947f69b20b0347cacaaaf3905f309d6c964736f6c63430008090033",
  "devdoc": {
    "author": "Enrique Piqueras - <epiquerass@gmail.com>",
    "details": "A contract to maintain a policy for each court.",
    "events": {
      "PolicyUpdate(uint256,string)": {
        "details": "Emitted when a policy is updated.",
        "params": {
          "_courtID": "The ID of the policy's court.",
          "_policy": "The URI of the policy JSON."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "changeGovernor(address)": {
        "details": "Changes the `governor` storage variable.",
        "params": {
          "_governor": "The new value for the `governor` storage variable."
        }
      },
      "constructor": {
        "details": "Constructs the `PolicyRegistry` contract.",
        "params": {
          "_governor": "The governor's address."
        }
      },
      "setPolicy(uint256,string)": {
        "details": "Sets the policy for the specified court.",
        "params": {
          "_courtID": "The ID of the specified court.",
          "_policy": "The URI of the policy JSON."
        }
      }
    },
    "title": "PolicyRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4303,
        "contract": "src/arbitration/PolicyRegistry.sol:PolicyRegistry",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4307,
        "contract": "src/arbitration/PolicyRegistry.sol:PolicyRegistry",
        "label": "policies",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
