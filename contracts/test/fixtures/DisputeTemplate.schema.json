{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "NewDisputeTemplate.schema.json",
  "type": "object",
  "default": {},
  "title": "Root Schema",
  "required": [
    "title",
    "description",
    "question",
    "frontendUrl",
    "disputePolicyURI",
    "arbitrableChainID",
    "arbitrableAddress",
    "arbitratorChainID",
    "arbitratorAddress"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "description": "JSON Schema URI (used by some editors)",
      "type": "string",
      "default": "NewDisputeTemplate.schema.json"
    },
    "category": {
      "type": "string",
      "default": "",
      "title": "The category Schema",
      "examples": [
        "Oracle"
      ]
    },
    "lang": {
      "type": "string",
      "default": "",
      "title": "The lang Schema",
      "examples": [
        "en_US"
      ]
    },
    "title": {
      "type": "string",
      "default": "",
      "title": "The title Schema",
      "examples": [
        "A reality.eth question",
        "Add Ethfinex Badge to Token",
        "Add Token to Registry",
        "Add a list to Consensus Layer Withdrawal Protection enabled badges",
        "Add a list to Omen Verified Market enabled badges",
        "Add a list to The Registry enabled badges",
        "Add a market to Omen Verified Market",
        "Add a validator to Consensus Layer Withdrawal Protection",
        "Add an entry to Ledger Contract Domain Name registry v2",
        "Proof of Humanity Clearing Request",
        "Proof of Humanity Registration Request",
        "Realitio Question",
        "Remove Ethfinex Badge From Token",
        "Remove Token from Registry",
        "Remove a list from Consensus Layer Withdrawal Protection enabled badges",
        "Remove a list from Omen Verified Market enabled badges",
        "Remove a market from Omen Verified Market",
        "Remove a validator from Consensus Layer Withdrawal Protection",
        "Remove an entry from Ledger Contract Domain Name registry v2",
        "Review a translation from Linguo",
        "Unslashed insurance claim"
      ]
    },
    "description": {
      "type": "string",
      "default": "",
      "title": "The description Schema",
      "examples": [
        "A Reality.eth question has been raised to arbitration.",
        "A request to register the specified entry to a list of provable humans.",
        "A request to remove the specified entry from a list of provable humans.",
        "Someone challenged a translation",
        "Someone requested to add a list to Consensus Layer Withdrawal Protection enabled badges.",
        "Someone requested to add a list to Omen Verified Market enabled badges.",
        "Someone requested to add a list to The Registry enabled badges.",
        "Someone requested to add a market to Omen Verified Market",
        "Someone requested to add a token to the token curated registry of tokens.",
        "Someone requested to add a validator to Consensus Layer Withdrawal Protection",
        "Someone requested to add an entry to Ledger Contract Domain Name registry v2",
        "Someone requested to add the the Ethfinex badge to a token.\n\nDescription\n\nTokens with the Ethfinex badge can participate in the Ethfinex Community Vote to become traded on the Ethfinex platform. To be eligible to receive the badge, the project and it's associated token must comply with the minimum set of criteria defined in the criteria document.",
        "Someone requested to remove a list from Consensus Layer Withdrawal Protection enabled badges.",
        "Someone requested to remove a list from Omen Verified Market enabled badges.",
        "Someone requested to remove a market from Omen Verified Market",
        "Someone requested to remove a token from a token curated registry of tokens.",
        "Someone requested to remove a validator from Consensus Layer Withdrawal Protection",
        "Someone requested to remove an entry from Ledger Contract Domain Name registry v2",
        "Someone requested to remove the the Ethfinex badge from a token.\n\nDescription\n\nTokens with the Ethfinex badge can participate in the Ethfinex Community Vote to become traded on the Ethfinex platform. To be eligible to receive the badge, the project and it's associated token must comply with the minimum set of criteria defined in the criteria document.",
        "The claimant requested a compensation for damages covered by Unslashed insurance in the provided amount."
      ]
    },
    "question": {
      "type": "string",
      "default": "",
      "title": "The question Schema",
      "examples": [
        "Does the entry comply with the required criteria?",
        "Does the list comply with the required criteria?",
        "Does the market comply with the required criteria?",
        "Does the translation comply with the required criteria?",
        "Does the validator comply with the required criteria?",
        "Give the answer to the question.",
        "Should the badge be added to the token?",
        "Should the badge be removed from the token?",
        "Should the request to register be accepted?",
        "Should the request to remove be accepted?",
        "Should the token be added to the registry?",
        "Should the token be removed from the registry?",
        "Should their claim be paid out?",
        "Which party abided by terms of the contract?"
      ]
    },
    "type": {
      "title": "The type Schema",
      "description": "An explanation about the purpose of this instance.",
      "type": "string",
      "default": "single-select",
      "examples": [
        "single-select"
      ],
      "enum": [
        "bool",
        "uint",
        "single-select",
        "multiple-select",
        "datetime"
      ]
    },
    "answers": {
      "type": "array",
      "default": [
        {
          "id": "0x00",
          "title": "Invalid/Refuse to Arbitrate",
          "reserved": true
        },
        {
          "id": "0x01",
          "title": "Yes",
          "description": "Accept the request.",
          "reserved": false
        },
        {
          "id": "0x02",
          "title": "No",
          "description": "Refuse the request.",
          "reserved": false
        }
      ],
      "title": "The answers Schema",
      "items": {
        "type": "object",
        "default": {},
        "title": "A Schema",
        "required": [
          "title"
        ],
        "dependentSchemas": {
          "id": {
            "properties": {
              "reserved": {
                "const": true
              }
            }
          }
        },
        "if": {
          "properties": {
            "reserved": {
              "const": true
            }
          }
        },
        "then": {
          "dependentRequired": {
            "id": true
          }
        },
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "default": "",
            "title": "The id Schema",
            "examples": [
              "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
              "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
              "0x0000000000000000000000000000000000000000000000000000000000000000"
            ]
          },
          "title": {
            "type": "string",
            "default": "",
            "title": "The title Schema",
            "examples": [
              "Accept the claim",
              "No",
              "No, Don't Add It",
              "No, Don't Remove It",
              "No, Keep It",
              "No, the translation should not be accepted",
              "Pay Receiver",
              "Refund Sender",
              "Reject the claim",
              "Yes",
              "Yes, Add It",
              "Yes, Remove It",
              "Yes, the translation should be accepted",
              "Answered Too Soon",
              "Invalid/Refuse to Arbitrate"
            ]
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "The description Schema",
            "examples": [
              "Accept the request to register the entry.",
              "Accept the request to remove the entry.",
              "Deny the request.",
              "Reject the claim if any of the acceptance criteria do not hold.",
              "Select this if you think the entry complies with the required criteria and should be added.",
              "Select this if you think the entry complies with the required criteria and should not be removed.",
              "Select this if you think the entry does not comply with the required criteria and should be removed.",
              "Select this if you think the entry does not comply with the required criteria and should not be added.",
              "Select this if you think the list complies with the required criteria and should be added.",
              "Select this if you think the list complies with the required criteria and should not be removed.",
              "Select this if you think the list does not comply with the required criteria and should be removed.",
              "Select this if you think the list does not comply with the required criteria and should not be added.",
              "Select this if you think the market complies with the required criteria and should be added.",
              "Select this if you think the market complies with the required criteria and should not be removed.",
              "Select this if you think the market does not comply with the required criteria and should be removed.",
              "Select this if you think the market does not comply with the required criteria and should not be added.",
              "Select this if you think the token and project comply with the required criteria and the badge should be added.",
              "Select this if you think the token and project comply with the required criteria and the badge should be kept.",
              "Select this if you think the token and/or project do(es) not comply with the required criteria and the badge should be removed.",
              "Select this if you think the token and/or project do(es) not comply with the required criteria and the badge should not be added.",
              "Select this if you think the token information is correct and the token should be added to the registry.",
              "Select this if you think the token information is correct and the token should not be removed from the registry.",
              "Select this if you think the token information is incorrect and the token should be not be added to the registry.",
              "Select this if you think the token information is incorrect and the token should be removed from the registry.",
              "Select this if you think the translation complies with the required criteria.",
              "Select this if you think the translation does not comply with the required criteria.",
              "Select this if you think the validator complies with the required criteria and should be added.",
              "Select this if you think the validator complies with the required criteria and should not be removed.",
              "Select this if you think the validator does not comply with the required criteria and should be removed.",
              "Select this if you think the validator does not comply with the required criteria and should not be added.",
              "Select to release funds to the Receiver",
              "Select to return funds to the Sender"
            ]
          },
          "reserved": {
            "type": "boolean",
            "default": false,
            "title": "The reserved Schema",
            "examples": [
              true,
              false
            ]
          }
        },
        "examples": [
          {
            "title": "Yes",
            "description": "Accept the request."
          },
          {
            "title": "No",
            "description": "Refuse the request."
          }
        ]
      }
    },
    "frontendUrl": {
      "type": "string",
      "default": "",
      "title": "The frontendUrl Schema",
      "examples": [
        "https://curate.kleros.io/tcr/1/0x0000000000000000000000000000000000000000/0x0000000000000000000000000000000000000000000000000000000000000000",
        "https://reality.eth.link/app/#!/question/0x0000000000000000000000000000000000000000000000000000000000000000/0"
      ]
    },
    "disputePolicyURI": {
      "type": "string",
      "default": "",
      "title": "The dispute policy URI Schema",
      "examples": [
        "/ipfs/QmPhEBstumEP84eSftx9MwBmSXBCGRFJMPZauKVa9gBizh/omen-verified-market.pdf",
        "/ipfs/QmPtXtFKfVc3w5aGVNYrmBZWEHBLpk2XMLkYCnEioxwy43/clwp-acceptance-policy.pdf",
        "/ipfs/QmTL1SCKpRcr7NRbVpXW6z9QoQXRHJT5cQr6PEge5qoLwU/t2cr-primary-document.pdf",
        "/ipfs/QmVabp1VjJNYzXDxbcWFdeK17RvvA9eQy6eJVf1T1AzS1a/linguo-translation-quality-policy.pdf",
        "/ipfs/QmVzwEBpGsbFY3UgyjA3SxgGXx3r5gFGynNpaoXkp6jenu/Ethfinex%20Court%20Policy.pdf",
        "/ipfs/QmW4zDA8X95cyfAsW9Nq1t7XNTyP3sMQAWNRFoQhMpgAv7/Kleros%2520Moderate%2520x%2520Reality.eth%2520Oracle%2520-%2520Telegram%2520Content%2520Moderation%2520Question%2520Resolution%2520Policy.pdf",
        "/ipfs/QmXDiiBAizCPoLqHvcfTzuMT7uvFEe1j3s4TgoWWd4k5np/proof-of-humanity-registry-policy-v1.3.pdf",
        "/ipfs/QmZ7RVU7re1g8nXDbAFMHV99pyie3dn4cY7Ga2X4h8mDpV/reject-all-policy.pdf",
        "/ipfs/QmaUr6hnSVxYD899xdcn2GUVtXVjXoSXKZbce3zFtGWw4H/Question_Resolution_Policy.pdf",
        "/ipfs/QmdvkC5Djgk8MfX5ijJR3NJzmvGugUqvui7bKuTErSD6cE/contract-domain-name-registry-for-ledger-policy-3-.pdf",
        "/ipfs/QmeTBY7jZe2ut5WjifNASADo3E4zBxkMd62WwBpXtwP9pg"
      ]
    },
    "arbitrableChainID": {
      "type": "string",
      "default": "",
      "title": "The arbitrableChainID Schema",
      "examples": [
        "1",
        "100"
      ]
    },
    "arbitrableAddress": {
      "type": "string",
      "default": "",
      "title": "The arbitrableAddress Schema",
      "examples": [
        "0x2e39b8f43d0870ba896f516f78f57cde773cf805"
      ]
    },
    "arbitratorChainID": {
      "type": "string",
      "default": "",
      "title": "The arbitratorChainID Schema",
      "examples": [
        "421614"
      ]
    },
    "arbitratorAddress": {
      "type": "string",
      "default": "",
      "title": "The arbitratorAddress Schema",
      "examples": [
        "0xD08Ab99480d02bf9C092828043f611BcDFEA917b"
      ]
    },
    "specification": {
      "type": "string",
      "default": "",
      "title": "The specification Schema",
      "examples": [
        "KIP00",
        "KIP99"
      ]
    }
  }
}
