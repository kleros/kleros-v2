name: 'Dependency Review and Auto-Merge'
on:
  merge_group:
    pull_request:
      types:
        - opened
        - synchronize

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            pipelinesghubeus2.actions.githubusercontent.com:443
            acghubeus1.actions.githubusercontent.com:443

      - name: 'Checkout Repository'
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@f6fff72a3217f580d5afd49a46826795305b63c7 # v3.0.8
        with:
          base-ref: ${{ github.event.pull_request.base.sha || 'dev' }}
          head-ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Approve Pull Request
        uses: actions/github-script@v3
         with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    script: |
      const { data: pullRequest } = await github.pulls.get({
        owner: context.repo.owner,
        repo: context.repo.repo,
        pull_number: context.payload.pull_request.number
      });
      await github.pulls.createReview({
        owner: context.repo.owner,
        repo: context.repo.repo,
        pull_number: context.payload.pull_request.number,
        event: 'APPROVE',
        body: 'Auto-approval after dependency review.'
      });

      - name: Merge Pull Request
        uses: actions/github-script@v3
        with:
       github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
      const { data: pullRequest } = await github.pulls.get({
        owner: context.repo.owner,
        repo: context.repo.repo,
        pull_number: context.payload.pull_request.number
      });
      await github.pulls.merge({
        owner: context.repo.owner,
        repo: context.repo.repo,
        pull_number: context.payload.pull_request.number,
        sha: pullRequest.head.sha
      });
